{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","hooks/useForm.js","actions/ui.js","firebase/firebase-config.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","reset2","newState","handleInputChange","e","target","name","value","setError","err","removeError","db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","googleAuthProvider","GoogleAuthProvider","startLoadingNotes","dispatch","a","getDocs","query","collection","notesSnap","forEach","snapHijo","push","data","setNotes","startSaveNote","getState","url","noteToFirestore","noteRef","doc","updateDoc","refreshNote","Swal","fire","title","activeNote","addNewNote","deleteNote","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","login","catch","console","log","finally","logout","LoginScreen","useDispatch","useSelector","formValues","isFormValid","validator","isEmail","length","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isEmpty","equals","createUserWithEmailAndPassword","updateProfile","startRegisterWithNameEmailPassword","AuthRouter","exact","path","component","NotesAppBar","noteDate","moment","date","format","style","display","file","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","formData","FormData","append","fetch","method","body","response","ok","json","cloudResponse","secure_url","close","startUploadingImage","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","deleteDoc","startDeleteNote","NothingSelected","JournalEntry","backgroundSize","backgroundImage","backgroundPositionX","JournalEntries","Sidebar","class","signOut","newNote","Date","getTime","addDoc","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7a79a352.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n    login:  '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleanning',\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n    \r\n        case types.notesActive:\r\n\r\n            return {\r\n                ...state,\r\n                active: { ...action.payload }\r\n             }\r\n\r\n        case types.notesAddNew:\r\n\r\n            return {\r\n                ...state,\r\n                notes: [ ...state.notes, action.payload ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n            \r\n        case types.notesUpdated:\r\n\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => (note.id === action.payload.id)\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( \r\n                    note => note.id !== action.payload\r\n                )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.uiSetError:\r\n\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n    \r\n        case types.uiRemoveError:\r\n\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\n// (Para usar Redux DevTools y además el middleware para acciones asíncronas)\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n// reducers a utilizar en la aplicación\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui:   uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\n// Crear el 'Store'\r\nexport const store = createStore( \r\n    reducers, \r\n    composeEnhancers( // configuración para accciones (actions) asíncronas\r\n        applyMiddleware( thunk ) // middleware para accciones (actions) asíncronas\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.login:\r\n\r\n            return {\r\n                uid: action.payload.uid,\r\n                displayName: action.payload.displayName,\r\n            }\r\n    \r\n        case types.logout:\r\n\r\n            return { }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","/*\r\n    Hook encargado de guardar en un objeto, el valor seteado en cada\r\n    input del formulario cada vez que haya un cambio en dicho input.\r\n    Ejemplo:\r\n    {\r\n        name_del_input: valor_del_input,\r\n        name_del_input: valor_del_input,\r\n        name_del_input: valor_del_input,\r\n        ...\r\n    }\r\n    va agregando siempre un atributo con el 'name' del input y le asigna\r\n    el valor que tenga el mismo input.\r\n*/\r\n\r\nimport { useState } from \"react\"\r\n\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [ values, setValues ] = useState( initialState );\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const reset2 = ( newState = initialState ) => {\r\n        setValues( newState );\r\n    }\r\n\r\n    const handleInputChange = (e) => { \r\n\r\n        setValues( {\r\n            ...values,\r\n            [ e.target.name ]: e.target.value\r\n        } );\r\n    }\r\n\r\n    return [ values, handleInputChange, reset, reset2 ];\r\n}","import { types } from \"../types/types\"\r\n\r\n\r\nexport const setError = ( err ) => {\r\n\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n\r\n    return {\r\n        type: types.uiRemoveError,\r\n    }\r\n}\r\n\r\nexport const startLoading = () => {\r\n\r\n    return {\r\n        type: types.uiStartLoading,\r\n    }\r\n}\r\n\r\nexport const finishLoading  = () => {\r\n\r\n    return {\r\n        type: types.uiFinishLoading,\r\n    }\r\n}","\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from '@firebase/firestore';\r\nimport { GoogleAuthProvider } from '@firebase/auth';\r\n\r\n// Configuración del Firebase de mi web app\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCgufVpn4fH07JrsfEssQO9rDLxFePJrLU\",\r\n    authDomain: \"react-app-udemy-d1498.firebaseapp.com\",\r\n    projectId: \"react-app-udemy-d1498\",\r\n    storageBucket: \"react-app-udemy-d1498.appspot.com\",\r\n    messagingSenderId: \"481527769609\",\r\n    appId: \"1:481527769609:web:0d934fd833f43c92ab26d8\"\r\n};\r\n\r\n// Inicialización de Firebase\r\nconst firebase = initializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore();\r\nconst googleAuthProvider = new GoogleAuthProvider(); // Autenticación de Google\r\n\r\nexport {\r\n    db,\r\n    firebase,\r\n    googleAuthProvider,\r\n}","import { addDoc, collection, deleteDoc, doc, getDocs, query, updateDoc } from \"@firebase/firestore\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { types } from \"../types/types\";\r\n\r\n//starts\r\nexport const startNewNote = () => {\r\n    \r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth; // getState nos regresa el estado completo del store\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        // insertar registro en la DB de firestone\r\n            // 'uid' será el nombre de la collection (la collection de primer nivel) y \"journal/notes\" la rutas a guardar\r\n        const doc = await addDoc( collection( db, `${ uid }`, \"journal/notes\" ), newNote);\r\n\r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n    }\r\n}\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n\r\n    return async ( dispatch ) => {\r\n\r\n        // función para obtener registros de la DB de Firestore.\r\n        const notesSnap = await getDocs( query( collection(db, `${ uid }/journal/notes` ) ) );\r\n        const notes = [];\r\n    \r\n        notesSnap.forEach( snapHijo => {\r\n            notes.push( {\r\n                id: snapHijo.id,\r\n                ...snapHijo.data()\r\n            });\r\n        });\r\n\r\n        dispatch( setNotes( notes ));\r\n    }\r\n}\r\n\r\nexport const startSaveNote = ( note ) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n        \r\n        const { uid } = getState().auth; // getState nos regresa el estado completo del store\r\n\r\n        if ( !note.url ) { // elimina el url del objeto, si este no existe\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id; // elimina el id de el objeto 'note'\r\n\r\n        const noteRef = doc(db, `${uid}/journal/notes/${note.id}`);\r\n        await updateDoc( noteRef, noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n\r\n        Swal.fire('Note saved!', note.title, 'success' );\r\n    }\r\n}\r\n\r\nexport const startUploadingImage = ( file ) => {\r\n\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { active: activeNote } = getState().notes; // getState nos regresa información del store\r\n\r\n        // Alerta de 'Cargando...'\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n\r\n        const cloudinaryUrl = 'https://api.cloudinary.com/v1_1/dshn8thfr/upload'\r\n        const formData = new FormData();\r\n        formData.append('upload_preset', 'react-journal');\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            //petición post a nuestro cloudinary\r\n            const response = await fetch( cloudinaryUrl, {\r\n                method: 'POST',\r\n                body: formData // file(img) & upload_preset\r\n            });\r\n\r\n            if ( response.ok ) { // si la petición es correcta\r\n                const cloudResponse = await response.json();\r\n                activeNote.url = cloudResponse.secure_url;\r\n                dispatch( startSaveNote( activeNote ) );\r\n\r\n            } else { \r\n                throw await response.json();\r\n            }\r\n\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n\r\n\r\n        Swal.close(); // Cierra la alerta 'Cargando...'\r\n    }\r\n}\r\n\r\nexport const startDeleteNote = ( id ) => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const noteRef = doc( db, `${uid}/journal/notes/${id}` )\r\n        await deleteDoc( noteRef );\r\n \r\n        dispatch( deleteNote( id ));\r\n\r\n        Swal.fire('Note deleted!', 'The note has been deleted.', 'success' );\r\n    }\r\n\r\n}\r\n\r\n// actions\r\nexport const activeNote = ( id, note ) =>{\r\n\r\n    return {\r\n        type: types.notesActive,\r\n\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => {\r\n\r\n    return {\r\n        type: types.notesLoad,\r\n\r\n        payload: notes,\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => {\r\n\r\n    return {\r\n        type: types.notesUpdated,\r\n\r\n        payload: {\r\n            id,\r\n            note: {\r\n                id,\r\n                ...note\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addNewNote = ( id, note ) => {\r\n\r\n    return {\r\n        type: types.notesAddNew,\r\n\r\n        payload: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => {\r\n\r\n    return {\r\n        type: types.notesDelete,\r\n\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const notesLogout = () => {\r\n\r\n    return {\r\n        type: types.notesLogoutCleaning,\r\n    }\r\n}","import { createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword, signInWithPopup, signOut, updateProfile } from \"@firebase/auth\";\r\nimport { googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { types } from \"../types/types\"\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport { notesLogout } from \"./notes\";\r\n\r\n\r\nexport const startLoginEmailPassword = ( email, password ) => {\r\n    \r\n    return ( dispatch ) => {\r\n        dispatch( startLoading() ); // bloquea el botón\r\n        const auth = getAuth();\r\n\r\n        signInWithEmailAndPassword( auth, email, password )\r\n            .then( ( {user} ) => {\r\n\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                \r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Error', 'Usuario y/o contraseña son incorrectos' ,'error');\r\n                console.log(e) //imprime el error recibido en la promesa\r\n            })\r\n            .finally( () => { //cuando se termina la promesa\r\n                dispatch( finishLoading() ); // desbloquea el botón\r\n            })\r\n        \r\n        // setTimeout(() => {\r\n        //     dispatch( finishLoading() );\r\n        // }, 1500);\r\n    }\r\n}\r\n\r\nexport const startRegisterWithNameEmailPassword = ( name, email, password ) => {\r\n\r\n    return ( dispatch ) => {\r\n        const auth = getAuth();\r\n\r\n        createUserWithEmailAndPassword( auth, email, password )\r\n            .then( async( {user} ) => {\r\n\r\n                await updateProfile( user, { displayName: name } );\r\n\r\n                // console.log(user);\r\n\r\n                dispatch( login( user.uid, user.displayName ) );\r\n\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Error', 'Firebase: Error! Read the console for more details.' ,'error');\r\n                console.log(e) //imprime el error recibido en la promesa\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n\r\n    return ( dispatch ) => {\r\n        const auth = getAuth();\r\n\r\n        signInWithPopup( auth, googleAuthProvider)\r\n            .then( ( {user} ) => {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n            })\r\n            .catch( e => {\r\n                // Swal.fire('Error', 'Usuario y/o contraseña son incorrectos' ,'error');\r\n                console.log(e) //imprime el error recibido en la promesa\r\n            })\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n\r\n    return async( dispatch ) => {\r\n        const auth = getAuth();\r\n\r\n        await signOut( auth );\r\n\r\n        dispatch( logout() );\r\n        dispatch( notesLogout() );\r\n    }\r\n}\r\n\r\n\r\n// actions\r\nexport const login = ( uid, displayName ) => {\r\n    \r\n    return {\r\n        type: types.login,\r\n        \r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    \r\n    return {\r\n        type: types.logout,\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\n\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    // hook de react-redux que hace los dispatch de las acciones (actions)\r\n    const dispatch = useDispatch();\r\n\r\n    // Extrayendo información del state del store\r\n    const { msgError } = useSelector( state => state.ui ); // Tiene acceso a la información del estado de la Store\r\n    const { loading } = useSelector( state => state.ui ); // Tiene acceso a la información del estado de la Store\r\n\r\n    // useForm (custom hook)\r\n    const [ formValues, handleInputChange, reset ] = useForm({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n\r\n    // Inicio de sesión con correo y contraseña\r\n    const handleLogin = (e) => { // onSubmit event\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) { // Sí el formulario es válido\r\n            dispatch( startLoginEmailPassword( email, password) );\r\n\r\n            reset();\r\n        }\r\n    }\r\n\r\n    // Inicio de sesión con Gooogle\r\n    const handleGoogleLogin = () => { //onClick event\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n    \r\n    // Validación del formulario con 'validator'\r\n    const isFormValid = () => {\r\n\r\n        if( !validator.isEmail(email) ) {\r\n            dispatch( setError( 'Invalid email' ) );\r\n            return false;\r\n\r\n        } else if( password.length < 5 ) {\r\n            dispatch( setError( 'Invalid password' ) );\r\n            return false;\r\n        }\r\n        \r\n        dispatch( removeError() );;\r\n        return true;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n\r\n            <form \r\n                onSubmit={ handleLogin } \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    ( msgError ) &&\r\n                        (\r\n                            <div className=\"auth__alert-error\">\r\n                                { msgError }\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth_social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\" \r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link to=\"/auth/register\" className=\"link\" >\r\n                    Creater new account\r\n                </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\n\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { startRegisterWithNameEmailPassword } from '../../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n    \r\n    // hook de react-redux que hace los dispatch de las acciones (actions)\r\n    const dispatch = useDispatch();\r\n\r\n    // Extrayendo 'msgError' del state del store\r\n    const { msgError } = useSelector( state => state.ui ); // Tiene acceso a la información del estado de la Store\r\n\r\n    // useForm (custom hook)\r\n    const [ formValues, handleInputChange, reset ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    // Registro con nombre, email y contraseña\r\n    const handleRegister = (e) => { // onSubmit event\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) { // Sí el formulario es válido\r\n            dispatch( startRegisterWithNameEmailPassword( name, email, password ));\r\n        }\r\n\r\n        reset();\r\n    }\r\n\r\n    // Validación del formulario con 'validator'\r\n    const isFormValid = () => {\r\n        if( validator.isEmpty( name ) ){\r\n            dispatch( setError( 'Invalid name' ) );\r\n            return false;\r\n\r\n        } else if( !validator.isEmail(email) ) {\r\n            dispatch( setError( 'Invalid email' ) );\r\n            return false;\r\n\r\n        } else if( ( !validator.equals( password, password2 ) ) || ( password.length < 5 )) {\r\n            dispatch( setError( 'Invalid password' ) );\r\n            return false;\r\n        }\r\n        \r\n        dispatch( removeError() );;\r\n        return true;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                {\r\n                    ( msgError ) &&\r\n                        (\r\n                            <div className=\"auth__alert-error\">\r\n                                { msgError }\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Email\"\r\n                    name=\"email\"                    \r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Password\"\r\n                    name=\"password\"                    \r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"                    \r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    // disabled={true}\r\n                >\r\n                    Register\r\n                </button>\r\n            </form>\r\n\r\n            <Link to=\"/auth/login\" className=\"link\" >\r\n                Already registered?\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    // BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    \r\n    \r\n    \r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n\r\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport moment from 'moment';\r\n\r\nimport { startSaveNote, startUploadingImage } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes);\r\n    const noteDate = moment( active.date ); // guarda la fecha de la nota\r\n\r\n    // Guardar la nota\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    // Evento del botón 'picture'\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click(); // simula que se hizo 'click' en el input 'File'\r\n    }\r\n\r\n    // Evento: cuando se active el input 'file'\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch( startUploadingImage( file ));\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ noteDate.format('LL') }</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\" \r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }    \r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { activeNote, startDeleteNote } from '../../actions/notes';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\n\r\nexport const NoteScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes);\r\n    \r\n    // use form\r\n    const [ formValues, handleInputChange, reset2 ] = useForm( note );\r\n    const { title, body, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect((  ) => {\r\n        \r\n        if ( note.id !== activeId.current ) {\r\n            reset2( note );\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [note, reset2]);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ));\r\n\r\n    }, [formValues, dispatch]);\r\n\r\n    // Elimina la nota activa\r\n    const handleDeleteNote = () => {\r\n        dispatch( startDeleteNote( id ) );\r\n    }\r\n    \r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"title\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    name=\"body\"\r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n\r\n                {\r\n                    ( note.url )\r\n                        && ( \r\n                            <div className=\"notes__image\">\r\n                                <img \r\n                                    src={ note.url }\r\n                                    alt=\"random_image\"\r\n                                />\r\n                            </div> \r\n                        )\r\n                    \r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDeleteNote }\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport const NothingSelected = () => {\r\n    \r\n    \r\n    \r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                Create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ( { id, date, title, body, url } ) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date);\r\n    \r\n    const handleEntryClick = () => {\r\n        dispatch( \r\n            activeNote(\r\n                id,\r\n                { date, title, body, url }\r\n        ));\r\n    }\r\n    \r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n    >\r\n            <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`,\r\n                    backgroundPositionX: 'center'\r\n                }}\r\n            ></div>\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }                 \r\n                </p>\r\n                <p className=\"journal_entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format('dddd') }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    \r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        { ...note } // PROP de cada propiedad que contenga cada 'Note'\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\n\r\nexport const Sidebar = () => {\r\n\r\n    // hook de react-redux que hace los dispatch de las acciones (actions)\r\n    const dispatch = useDispatch();\r\n\r\n    // obtención de información de la storee\r\n    const { displayName } = useSelector( state => state.auth ); // Tiene acceso a la información del estado de la Store\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar mt-1\">\r\n                <h3>\r\n                    <i class=\"fas fa-user\"></i>\r\n                    <span> { displayName }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\n\r\nexport const JournalScreen = () => {\r\n    \r\n    const { active } = useSelector( state => state.notes )\r\n    \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                { \r\n                    (active)  \r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected /> )\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    // hook de react-redux que hace los dispatch de las acciones (actions)\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true); // estado que indica si está autenticado o no\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false); // estado para verificar si está autenticado y proteger las rutas\r\n\r\n    //Iniciar sesión sí ya esta loggeado\r\n    useEffect( () => {\r\n        const auth = getAuth();\r\n\r\n        onAuthStateChanged( auth, async( user ) => { // \"observable\" que se dispara cada que el usuario se loggea\r\n\r\n            // Sí está loggeado\r\n            if ( user?.uid ) { // sí 'user' existe y conntiene un 'uid'\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n                \r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            // Después de la verificación\r\n            setChecking( false );\r\n\r\n        });\r\n        \r\n    }, [ dispatch, setChecking, setIsLoggedIn ] );\r\n    \r\n\r\n    if ( checking ) {\r\n        return (\r\n            <h4>Wait a moment please...</h4>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                {\r\n                    isLoggedIn ?\r\n                    (\r\n                        <>\r\n                            <Route exact path=\"/\" component={ JournalScreen } />\r\n                            <Redirect to=\"/\" />\r\n                        </>\r\n                    ) :\r\n\r\n                    (\r\n                        <>\r\n                            <Route path=\"/auth\" component={ AuthRouter } />\r\n                            <Redirect to=\"/auth/login\" />\r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {/* <Route path=\"/auth\" component={ AuthRouter } />\r\n\r\n                <Route exact path=\"/\" component={ JournalScreen } />\r\n\r\n                <Redirect to=\"/auth/login\" /> */}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux' // Funciona como el 'useContext' pasando el 'Store'.\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\n\r\n\r\nexport const JournalApp = () => {\r\n    \r\n    \r\n    return (\r\n        <Provider store={ store } > \r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { JournalApp } from './JournalApp';\r\n\r\nimport './styles/styles.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <JournalApp />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}